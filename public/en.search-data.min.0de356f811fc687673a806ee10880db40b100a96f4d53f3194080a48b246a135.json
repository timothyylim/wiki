[{"id":0,"href":"/translating-in-your-terminal/","title":"Translating In Your Terminal","section":"","content":" Translating In Your Terminal # As a way to learn German, I write all my todos in German. It feels fitting, for some reason.\nI don\u0026rsquo;t enjoy opening up google translate so I found translate-shell.\nFor mac users:\n$ brew install translate-shell I added this to my ~/.zshrc file:\nalias t=\u0026#39;trans en:de\u0026#39; which means I can just do this in my terminal:\n$ t \u0026#39;hello world\u0026#39; hello world Hallo Welt Translations of hello world [ English -\u0026gt; Deutsch ] hello world , hallo welt "},{"id":1,"href":"/adding-twitter-login-to-nextjs/","title":"Adding Twitter Login To NextJs (draft)","section":"","content":"Get Twitter keys\nDeveloper Portal User authentication settings you ahve to add \u0026ldquo;postinstall\u0026rdquo;: \u0026ldquo;prisma generate\u0026rdquo; to scripts x "},{"id":2,"href":"/editing-a-static-site-with-obsidian/","title":"Editing A Static Site With Obsidian","section":"","content":" Editing A Static Site With Obsidian # Let me tell you about how this site works because I love it.\nMy setup has two components:\nA hugo site that lives at ~/repos/wiki This particular hugo theme expects content to be in wiki/content and wiki/content/docs if it is to be shown in the sidebar An Obsidian Vault that lives at ~/repos/vault Now for the magic:\nWe do a symlink from wiki/content into ~/repos/vault which means that I can use Obsidian\u0026rsquo;s super fast file traversal to edit my personal notes as well as the wiki and most importantly feed my vim addiction!\nHow cool is that!\nHow about testing and publishing?\nI\u0026rsquo;ve also udpated my .zshrc to have two nifty commands: $ wiki-serve to test the site and $ wiki-push to build and push to Github. Currently I use vercel to deploy from Github.\nMy .zshrc looks like this:\n# the brackets means that a subshell is created to cd into the directory alias wiki-serve=\u0026#39;(cd ~/repos/wiki \u0026amp;\u0026amp; hugo server)\u0026#39; alias wiki-push=\u0026#39;~/repos/configs/hugo-build-and-push.sh ~/repos/wiki\u0026#39; and the hugo-build-and-push.sh script looks like this:\n#!/bin/bash # Check if the script is being sourced (return 0 2\u0026gt;/dev/null) \u0026amp;\u0026amp; sourced=1 || sourced=0 # If the script is sourced, don\u0026#39;t execute the main functionality if [ $sourced -eq 1 ]; then echo \u0026#34;Script is being sourced. Skipping execution.\u0026#34; return 0 fi # Check if a directory is passed as an argument if [ -z \u0026#34;$1\u0026#34; ]; then echo \u0026#34;No directory provided. Usage: ./script.sh \u0026lt;directory\u0026gt;\u0026#34; exit 1 fi # Navigate to the specified directory DIRECTORY=\u0026#34;$1\u0026#34; if [ ! -d \u0026#34;$DIRECTORY\u0026#34; ]; then echo \u0026#34;The specified directory does not exist: $DIRECTORY\u0026#34; exit 1 fi cd \u0026#34;$DIRECTORY\u0026#34; || { echo \u0026#34;Failed to navigate to directory: $DIRECTORY\u0026#34;; exit 1; } echo \u0026#34;Building Hugo site in $DIRECTORY...\u0026#34; hugo echo \u0026#34;Checking for changes...\u0026#34; if git status --porcelain | grep -q .; then echo \u0026#34;Changes detected. Adding files...\u0026#34; git add . \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 echo \u0026#34;Committing changes...\u0026#34; git commit -m \u0026#34;update content\u0026#34; \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 echo \u0026#34;Pushing changes to remote repository...\u0026#34; if git push \u0026gt; /dev/null 2\u0026gt;\u0026amp;1; then echo \u0026#34;Changes pushed successfully.\u0026#34; else echo \u0026#34;Failed to push changes. Please check your network connection and remote repository settings.\u0026#34; fi else echo \u0026#34;No changes detected after Hugo build.\u0026#34; fi echo \u0026#34;Script completed.\u0026#34; Notes:\nI\u0026rsquo;m still figuring out how to make images work. If you know please ping me at @wayfaring_tim!\n"}]